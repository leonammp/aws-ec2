#!/bin/bash

# Nome do arquivo do certificado (dentro da pasta ~/.ssh/)
certificado_ssh=portal-de-boletos-prod.pem
regiao_aws_padrao="sa-east-1"

# Função para listar as instâncias EC2
listar_ec2() {
  local regiao_aws_padrao=$1
  echo -e "\e[1;36m===== Menu de Instâncias EC2 (\e[1;32m$regiao_aws_padrao\e[1;36m) =====\e[0m"
  instancias=$(aws ec2 describe-instances --filters "Name=instance-state-name,Values=running" --query "Reservations[*].Instances[*].[Tags[?Key=='Name'].Value|[0],InstanceType,PrivateIpAddress,State.Name]" --output json --region $regiao_aws_padrao)
  instancias_array=($(echo "$instancias" | jq -r '.[] | @json'))
  if [ -n "$instancias_array" ]; then
      # Limpar tabela com dados do EC2
      > /tmp/tabela_ec2.txt
      for i in "${!instancias_array[@]}"; do
          dados=($(echo "${instancias_array[$i]}" | jq -r '.[]'))
          nome="$(echo "${dados[1]}" | sed 's/"//g; s/,//g')"
          tipo="$(echo "${dados[2]}" | sed 's/"//g; s/,//g')"
          ip="$(echo "${dados[3]}" | sed 's/"//g; s/,//g')"
          echo -e "        \e[1;32m$((i+1)):\e[0m\t$nome\t$tipo\t$ip" >> /tmp/tabela_ec2.txt
      done
      column -t -s $'\t' /tmp/tabela_ec2.txt
      echo -e "\e[1;36m==============================================\e[0m"
  else
      echo -e "\e[1;31mNenhuma instância em 'running' encontrada em: \e[1;32m$regiao_aws_padrao\e[0m"
      exit
  fi
}

# Função para listar os containers Docker em uma instância
listar_containers() {
    local servidor=$1
    echo -e "\e[1;36m=== Menu de Containers Docker ===\e[0m"
    containers=$(ssh -i ~/.ssh/$certificado_ssh ec2-user@$servidor 'docker ps --format "{{.Image}} => ID: {{.ID}}" | awk -F"/" "{print \$NF}"')
    if [ -n "$containers" ]; then
        IFS=$'\n' read -d '' -a containers_array <<< "$containers"
        for i in "${!containers_array[@]}"; do
            echo -e "\e[1;32m\t$((i+1)):\e[0m ${containers_array[$i]}"
        done
        echo -e "\e[1;36m=================================\e[0m"
    else
        echo -e "\e[1;31mNenhum container Docker encontrado em: \e[1;32m$servidor\e[0m"
        exit
    fi
}

while true; do
  listar_ec2 "$regiao_aws_padrao"
  echo -e "\n\e[1;36mDigite o número da instância que deseja entrar (ou 'q' para sair):\e[0m "
  read numero_instancia
  if [[ $numero_instancia == "q" ]]; then
      break
  fi
  # Extrair o ip da instância com base no número selecionado
  instancia_ip=$(cat /tmp/tabela_ec2.txt | sed -n "${numero_instancia}p" | awk '{print $NF}')
  instancia_nome=$(cat /tmp/tabela_ec2.txt | sed -n "${numero_instancia}p" | awk '{print $2}')
  if [[ -z $instancia_ip ]]; then
      echo -e "\e[1;31mErro: Número de instância inválido.\e[0m"
  else
    echo -e "\nInstância: \e[1;32m$instancia_nome\e[0m"
    while true; do
        listar_containers "$instancia_ip"
        echo -e "\n\e[1;36mDigite o número do container que deseja entrar (ou 'q' para voltar ao Menu de Instâncias):\e[0m "
        read numero_container
        if [[ $numero_container == "q" ]]; then
            break
        fi
        # Extrair o ID do container com base no número selecionado
        container_id=$(echo "$containers" | sed -n "${numero_container}p" | awk '{print $NF}')
        if [[ -z $container_id ]]; then
            echo -e "\e[1;31mErro: Número de container inválido.\e[0m"
        else
            # Comando para entrar no container Docker
            ssh -t -i ~/.ssh/$certificado_ssh ec2-user@$instancia_ip "docker exec -it $container_id bash"
        fi
    done
  fi
done
